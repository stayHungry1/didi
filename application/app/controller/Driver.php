<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018.5.5
 * Time: 21:19
 */

namespace app\app\controller;


class Driver extends BaseDriver
{
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 获取司机信息
     */
    public function getInfo()
    {
        $status = model('drivers')->field('status')->where('id', DRIVER_ID)->find();
        exit_json(1, '请求成功', ['status'=>$status]);
    }

    /**
     * 设置司机经纬度
     */
    public function setLocation()
    {
        $driver_id = input('driver_id');
        $lat = input('lat');
        $lng = input('lng');
        if(!$lat || !$lng){
            exit_json(-1, '参数错误');
        }
        model('drivers')->save(['lat'=>$lat, 'lng'=>$lng], ['id'=>$driver_id]);
        exit_json();
    }

    /**
     * 获取派送订单
     */
    public function getPsOrder()
    {
        $order = db("order")->field('id, user_id, order_no, start_location, end_location')->where(['driver_id'=>DRIVER_ID, 'driver_status'=>0, 'status'=>0])->find();
        $user = model('user')->field('name, telephone')->where('id', $order['user_id'])->find();
        $data['order_info'] = $order;
        $data['user_info'] = $user;
        if($order){
            exit_json(1, '请求成功', $data);
        }else{
            exit_json(-1, '暂无订单');
        }
    }
    /**
     * 确认接单
     */
    public function getOrder()
    {
        $order_id = input('order_id');
        if(!$order_id){
            exit_json(-1, '订单id为空');
        }
        $order = db("order")->where('id', $order_id)->find();
        if($order['driver_status'] != 0){
            exit_json(-1, '订单已处理');
        }else{
            db('order')->where('id', $order_id)->update(['driver_status'=>1]);
            exit_json(1, '接单成功');
        }
    }

    /**
     * 用户已上车
     */
    public function getUser()
    {
        $order_id = input('order_id');
        $order = db("order")->where('id', $order_id)->find();
        if($order['driver_status'] != 1){
            exit_json(-1, '订单已处理');
        }else{
            if($order['user_status'] == 1){
                $update_data = [
                    "starttime"=>time(),
                    "status"=>1,
                    "driver_status"=>2
                ];
            }else{
                $update_data = [
                    "driver_status"=>2
                ];
            }
            db('order')->where('id', $order_id)->update($update_data);
            exit_json();
        }
    }

    /**
     * 获取订单状态
     */
    public function getOrderStatus()
    {
        $lat = input('lat');
        $lng = input('lng');
        $order_id = input('order_id');
        $order = db('order')->where('id', $order_id)->find();
        if($order['status'] == 2){
            exit_json(1, '订单完成', ['status'=>2]);
        }else if($order['status'] == 1){
            $distance = GetDistance($lat, $lng, $order['end_lat'], $order['end_lng']);
            if($distance<100){
                $endtime = time();
                $cost_time = ($endtime-$order['starttime'])/60;
                $fee = round($cost_time*0.5, 2);
                $data = [
                    "status"=>2,
                    "endtime"=>$endtime,
                    "money"=>$fee,
                ];
                //更新订单状态
                db('order')->where('id', $order_id)->update($data);
                //更新司机状态
                model('drivers')->save(['is_free'=>0], ['id'=>$order['driver_id']]);
                exit_json(1, '订单完成', ['status'=>2]);
            }else{
                exit_json(1, '订单进行中', ['status'=>1]);
            }
        }else{
            exit_json(1, '订单未开始',['status'=>0]);
        }
    }

    /**
     * 司机提交审核
     */
    public function authDriver()
    {
        $rel_name = input('rel_name');
        $car = input('car');
        $car_no = input('car_no');
        $card_no = input('card_no');
        $carModels = input('carModels');
        $firstGetDocDate = input('firstGetDocDate');
        $archviesNo = input('archviesNo');
        $data = [
            'rel_name'=>$rel_name,
            'car'=>$car,
            'car_no'=>$car_no,
            'card_no'=>$card_no,
            'carModels'=>$carModels,
            'firstGetDocDate'=>$firstGetDocDate,
            'archviesNo'=>$archviesNo,
            'status'=>1
        ];
        $res = model('drivers')->allowField(true)->save($data, ['id'=>DRIVER_ID]);
        if($res){
            exit_json(1, '提交成功');
        }else{
            exit_json(-1, '提交失败');
        }
    }

    /**
     * 保存基本资料
     */
    public function saveInfo()
    {
        $name = input('name');
        $file = request()->file('logo');
        if ($file) {
            $info = $file->move(__UPLOAD__ . '/driver', md5(microtime() . rand(1000, 9999)));
            if ($info) {
                $saveName = $info->getSaveName();
                $path = "/upload/driver/" . $saveName;
            } else {
                // 上传失败获取错误信息
                exit_json(-1, $file->getError());
            }
        }else{
            exit_json(-1, '头像文件不存在');
        }
        $data = [
            'name'=>$name,
            'logo'=>$path
        ];
        $res = model('drivers')->save($data, ['id'=>DRIVER_ID]);
        if($res){
            exit_json();
        }else{
            exit_json(-1, '保存失败');
        }
    }


    /**
     * 获取订单列表
     */
    public function getOrderList()
    {
        $page = input('page');
        $limit = input('limit');
        $offset = ($page - 1) * $limit;
        $orderList = db('order')->where(['driver_id' => DRIVER_ID, 'status' => 2])->limit($offset, $limit)->select();
        $data = [];
        foreach ($orderList as $order) {
            $t = [];
            $t['order_id'] = $order['id'];
            $t['start_time'] = date('Y-m-d H:i:s', $order['starttime']);
            $t['end_time'] = date('Y-m-d H:i:s', $order['endtime']);
            $t['start_location'] = $order['start_location'];
            $t['end_location'] = $order['end_location'];
            $data[] = $t;
        }
        exit_json(1, '请求成功', $data);
    }

    /**
     * 查看订单详情
     */
    public function checkOrder()
    {
        $order_id = input('order_id');
        $order = db('order')->where('id', $order_id)->find();
        if(!$order){
            exit_json(-1, '订单不存在');
        }
        $data = $this->formatOrder($order);
        exit_json(1, '请求成功',$data);


    }

    /**
     * 格式化订单信息
     * @param $order
     * @return array
     */
    private function formatOrder($order)
    {
        $data = [];
        $data['order_no'] = $order['order_no'];
        $data['start_time'] = date('Y-m-d H:i:s', $order['starttime']);
        $data['end_time'] = date('Y-m-d H:i:s', $order['endtime']);
        $data['start_location'] = $order['start_location'];
        $data['end_location'] = $order['end_location'];
        $data['cost_time'] = $order['endtime']-$order['starttime'];
        $data['money'] = $order['money'];
        $data['point'] = $order['point'];
        $data['pingjia'] = $order['pingjia'];
        if($order['point'] || $order['pingjia']){
            $data['is_pingjia'] = 1;
        }else{
            $data['is_pingjia'] = 0;
        }
        $user = model('user')->where('id', $order['user_id'])->find();
        $data['user_name'] = $user['name'];
        $data['telephone'] = $user['telephone'];
        return $data;
    }


}