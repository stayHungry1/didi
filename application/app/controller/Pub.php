<?php
/**
 * App用户通用类
 * Created by PhpStorm.
 * User: tsingStar
 * Date: 2018/1/19
 * Time: 8:50
 */

namespace app\app\controller;


use app\common\model\Drivers;
use think\Controller;
use app\common\model\User;

class Pub extends Controller
{
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     *
     * 会员登陆
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    function login()
    {

        $telephone = input('post.telephone');
        $password = input('post.password');
        $type = input('post.type');
        if($type == 1){
            $userModel = new User();
            $user = $userModel->where('telephone', 'eq', $telephone)->find();
            if($user){
                if($user['password'] != md5($password)){
                    exit_json(-1, '密码错误');
                }
                exit_json(1, '登陆成功', $userModel->getUserInfo($user));
            }else{
                exit_json(-1, '会员不存在');
            }
        }elseif ($type == 2){
            $userModel = new Drivers();
            $user = $userModel->where('telephone', 'eq', $telephone)->find();
            if($user){
                if($user['password'] != md5($password)){
                    exit_json(-1, '密码错误');
                }
                exit_json(1, '登陆成功', $userModel->getUserInfo($user));
            }else{
                exit_json(-1, '会员不存在');
            }

        }else{
            exit_json(-1, '参数错误');
        }

    }

    /**
     * 会员注册
     */
    function register()
    {
        $name = input('post.telephone');
        $password = input('post.password');
        if (!$password) {
            exit_json(-1, '密码不能为空');
        }
        $data['password'] = md5($password);
        $data['telephone'] = $name;
        if(input('post.type') == 1){
            $is_user = model('user')->where('telephone', input('telephone'))->find();
            if($is_user){
                exit_json(-1, '手机号已注册过');
            }
            $userModel = new User();
            $userModel->allowField(true)->save($data);
            $userid = $userModel->getLastInsID();
            if ($userid) {
                $user = $userModel->find($userid);
                exit_json(1, '注册成功', $userModel->getUserInfo($user));
            } else {
                exit_json(-1, '注册失败');
            }
        }else{
            $is_driver = model('drivers')->where('telephone', input('telephone'))->find();
            if($is_driver){
                exit_json(-1, '手机号已注册过');
            }
            $driversModel = new Drivers();
            $driversModel->allowField(true)->save($data);
            $userid = $driversModel->getLastInsID();
            if ($userid) {
                $user = $driversModel->find($userid);
                exit_json(1, '注册成功', $driversModel->getUserInfo($user));
            } else {
                exit_json(-1, '注册失败');
            }
        }
    }

    /**
     * 重置密码
     */
    function resetPassword()
    {
        $data = input('post.');
        if(!$data['phone'] || !$data['password']){
            exit_json(-1, '参数错误');
        }
        $value = input('type');
        if($value == 1){
            $userModel = new User();
            $res = $userModel->save(['password'=>md5($data['password'])], ['telephone'=>$data['phone']]);
        }else{
            $res = model('drivers')->save(['password'=>md5($data['password'])], ['telephone'=>$data['phone']]);
        }
        if($res){
            exit_json();
        }else{
            exit_json(-1, '重置密码失败');
        }
    }

}